name: 🚀 CI - iOS Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 🧪 Build and Test
    runs-on: macos-13
    
    env:
      # 👇 Deshabilita completamente la validación de certificados de SPM
      SWIFTPM_DISABLE_PACKAGE_COLLECTION_CERTIFICATE_VALIDATION: "1"
      # 👇 Evita que Xcode valide plugins/firmas (refuerzo adicional)
      IDESkipPackagePluginFingerprintValidations: "YES"
      IDESkipPackageFingerprintValidations: "YES"

    steps:
      - name: 🧽 Checkout repo
        uses: actions/checkout@v4

      - name: 🧩 Desactivando validaciones de seguridad
        run: |
          echo "⚙️ Configurando Xcode para ignorar validaciones..."
          defaults write com.apple.dt.Xcode IDEPackageCollectionCertificateCheck -bool NO
          defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidations -bool YES
          defaults write com.apple.dt.Xcode IDESkipPackageFingerprintValidations -bool YES
          defaults write com.apple.dt.Xcode IDESkipPackageSignatureValidation -bool YES
          echo "✅ Validaciones desactivadas"

      - name: 🧹 Limpiar caché de SPM
        run: |
          echo "🧹 Limpiando cachés problemáticas..."
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf .swiftpm
          rm -rf .build

      - name: 🛠️ Instalar dependencias
        run: |
          xcodebuild -resolvePackageDependencies \
            -project PlatziStore.xcodeproj \
            -scheme PlatziStore \
            -scmProvider system

      - name: 🧪 Compilar y testear
        run: |
          xcodebuild test \
            -project PlatziStore.xcodeproj \
            -scheme PlatziStore \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=16.4'

      - name: 📦 Reporte de resultados (opcional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ResultBundle
          path: /Users/runner/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
